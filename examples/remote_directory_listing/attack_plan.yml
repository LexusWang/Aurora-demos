  - emulation_plan_details:
      adversary_name: test
      creation_time: 2024-11-11 02:17:35 UTC+0000
  - uuid: 2d7c471a-e887-4b78-b0dc-b0df1f2e0658
    name: Malicious User Agents - Nix
    id: T1071.001
    source: ART
    supported_platforms:
      - linux
      - macos
    tactics:
      - Command and Control
    technique: 'Application Layer Protocol: Web Protocols'
    description: |
      This test simulates an infected host beaconing to command and control.
      Inspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat
    executor:
      command: |
        curl -s -A "HttpBrowser/1.0" -m3 #{domain}
        curl -s -A "Wget/1.9+cvs-stable (Red Hat modified)" -m3 #{domain}
        curl -s -A "Opera/8.81 (Windows NT 6.0; U; en)" -m3 #{domain}
        curl -s -A "*<|>*" -m3 #{domain}
      name: sh
    arguments:
      domain:
        description: Default domain to simulate against
        type: string
        default: www.google.com
    dependencies: []
  - uuid: bdaebd56-368b-4970-a523-f905ff4a8a51
    name: Environment variable scripts
    id: T1059.004
    source: ART
    supported_platforms:
      - linux
    tactics:
      - Execution
    technique: 'Command and Scripting Interpreter: Unix Shell'
    description: |
      An adversary may place scripts in an environment variable because they can't or don't wish to create script files on the host. The following test, in a bash shell, exports the ART variable containing an echo command, then pipes the variable to /bin/bash
    executor:
      name: sh
      elevation_required: false
      command: |
        export ART='echo "Atomic Red Team was here... T1059.004"'
        echo $ART |/bin/sh
      cleanup_command: |
        unset ART
    arguments: []
    dependencies: []
  - uuid: 13c5e1ae-605b-46c4-a79f-db28c77ff24e
    name: Nix File and Directory Discovery 2
    id: T1083
    source: ART
    supported_platforms:
      - linux
      - macos
    tactics:
      - Discovery
    technique: File and Directory Discovery
    description: |
      Find or discover files on the file system
    executor:
      command: |
        cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > #{output_file}
        if [ -f /etc/mtab ]; then cat /etc/mtab >> #{output_file}; fi;
        find . -type f -iname *.pdf >> #{output_file}
        cat #{output_file}
        find . -type f -name ".*"
      cleanup_command: 'rm #{output_file}'
      name: sh
    arguments:
      output_file:
        description: Output file used to store the results.
        type: path
        default: /tmp/T1083.txt
    dependencies: []
