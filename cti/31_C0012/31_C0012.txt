During the Operation CuckooBees, the attackers initially used several legitimate Windows commands for information gathering and reconnaissance. These included the net user command to obtain account information, and net accounts, net group, net view, net session, net use, net time, and net start commands to further understand network shares, group memberships, sessions, and account policies. In addition, the attackers used the query user and whoami commands to identify current user sessions and privileges, the tasklist command to list running processes, the systeminfo command to gather detailed system configuration, and the fsutil fsinfo drives and dir c:\\ commands to identify system disks and files. The attackers also employed ipconfig, nbtstat, tracert, route print, and cat /etc/hosts (for Linux systems) for network environment reconnaissance, while using the ping command to test the reachability of hosts. To gain deeper insight into the domain environment, the attackers used dsquery and dsget to query users and administrative groups in the domain.

To further collect sensitive information, the attackers used the reg save command to export and save critical registry credentials, including the following commands: reg save HKLM\SYSTEM system.hiv, reg save HKLM\SAM sam.hiv, and reg save HKLM\SECURITY security.hiv. These registry hives contain information related to system accounts (SAM), system configuration (SYSTEM), and security policies (SECURITY), which the attackers could use to extract credentials offline.

While ensuring persistent access to the compromised systems, the attackers implemented multiple persistence mechanisms. They modified the Windows services IKEEXT and PrintNotify to side-load malicious DLLs, maintaining their persistence. Additionally, the attackers enabled the WinRM service and configured it over HTTP and HTTPS as a backup remote access channel. The specific command used for this was:cscript //nologo "C:\Windows\System32\winrm.vbs" set winrm/config/service@{EnableCompatibilityHttpsListener="true"}

Furthermore, the attackers deployed a web shell on the compromised Enterprise Resource Planning (ERP) Web Application Server as a persistence mechanism. They also utilized a signed kernel rootkit to ensure their malicious software remained hidden within the system and stored payloads in the Windows CLFS (Common Log File System) transactional logs, further concealing their activities. For lateral movement, the attackers created scheduled tasks to execute batch scripts using the following command:SCHTASKS /Create /S <IP Address> /U <Username> /p <Password> /SC ONCE /TN test /TR <Path to Batch File> /ST <Time> /RU SYSTEM

In terms of data exfiltration, the attackers took further steps by using the Makecab utility to compress stolen data and using WinRAR to create encrypted archives to protect the data before exfiltration. At the same time, the attackers used encoded VBScript files, which were executed using wscript, and the decoded output was written to a text file. These malicious script executions provided the attackers with further convenience for subsequent activities. Additionally, the attackers leveraged batch scripts for initial reconnaissance, laying the groundwork for their later actions.

To enhance persistence, the attackers employed various methods to ensure that their malicious software remained operational within the system. These included modifying and controlling multiple Windows services, exploiting system vulnerabilities for privilege escalation, and even creating virtual remote services to maintain access through multiple channels.