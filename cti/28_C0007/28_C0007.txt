Operation FunnyDream
During Operation FunnyDream, the threat actors registered multiple domains, likely using a known email account to facilitate these registrations. They deployed a new backdoor named FunnyDream and also used a modified version of the open-source remote administration tool PcShare to enhance their remote access capabilities.

To establish initial access and maintain persistence, the actors employed Visual Basic scripts to execute remote commands and frequently leveraged wmiexec.vbs in combination with cmd.exe for remote execution. On compromised hosts, they utilized 7zr.exe to archive collected files and downloaded additional droppers and backdoors to extend their control.

For internal reconnaissance, the attackers used Tasklist to enumerate running processes, Systeminfo to gather host information, and ipconfig and netstat to discover network configurations and connections on remote systems. In addition, they employed various tools and batch scripts to map out the victims' internal network structure, enabling further lateral movement.

Operation Frankenstein
During Operation Frankenstein, the threat actors acquired and extensively utilized the post-exploitation framework Empire. They likely delivered spearphishing emails containing malicious Microsoft Word documents and relied on victims to enable macros to execute embedded payloads. These documents were designed to fetch remote templates from adversary-controlled websites, initiating the malware delivery chain.

To establish persistence, the attackers created a scheduled task using the command /Create /F /SC DAILY /ST 09:00 /TN WinUpdate /TR, naming it "WinUpdate." They also executed actor-developed files via MSBuild and used Empire to retrieve information such as running processes, machine name, public IP address, usernames, and administrative privileges.

For evasion and anti-analysis, the threat actors deployed scripts containing WMI queries to detect whether the environment was a virtual machine or sandbox, including VMware and VirtualBox. These scripts also queried the number of CPU cores allocated to the system and ceased execution if fewer than two were found. Moreover, the actors used WMI to determine if specific security applications were running and to identify the operating system version, adjusting their techniques accordingly.